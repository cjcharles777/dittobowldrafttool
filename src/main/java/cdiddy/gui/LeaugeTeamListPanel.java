/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cdiddy.gui;

import cdiddy.objects.Team;
import cdiddy.objects.comparators.TeamRankComparator;
import cdiddy.utils.application.TeamService;
import java.awt.Component;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import javax.swing.AbstractCellEditor;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author cedric
 */
public class LeaugeTeamListPanel extends javax.swing.JPanel {
private TeamService teamservice;
private  List<Team> listTeam;
private TeamTableModel teamModel = new TeamTableModel();
    /**
     * Creates new form UserTeamListPanel
     */
    public LeaugeTeamListPanel() 
    {
        initComponents();
    }
    
    public LeaugeTeamListPanel(TeamService teamservice) 
    {
        initComponents();
        this.teamservice = teamservice;
       
         populateTeamTable();
       
         
    }
    public void populateLeauge(String leagueID)
    {
        listTeam = this.teamservice.loadLeaugeTeams(leagueID);
        Collections.sort(listTeam, new TeamRankComparator());
        teamModel = new TeamTableModel();
        jTable1.setModel(teamModel);
        populateTeamTable();
    }
    private void populateTeamTable()
    {
        if (listTeam != null)
        {    
            for(Team team : listTeam)
            {
                teamModel.addRow(team);
            }
        }
    }

    public class TeamCellEditorRenderer extends AbstractCellEditor implements TableCellRenderer, TableCellEditor 
    {
         private static final long serialVersionUID = 1L;
        private LeagueTeamPanel renderer = new LeagueTeamPanel();
        private LeagueTeamPanel editor = new LeagueTeamPanel();

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            renderer.setTeam((Team) value);
            return renderer;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            editor.setTeam((Team) value);
            return editor;
        }

        @Override
        public Object getCellEditorValue() {
            return editor.getTeam();
        }

    }
    public class TeamTableModel extends DefaultTableModel 
    {
        private static final long serialVersionUID = 1L;

           @Override
           public int getColumnCount() {
               return 1;
           }

           public void addRow(Team team) {
               super.addRow(new Object[]{team});
               //super.fireTableDataChanged();
           }
       }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(800, 400));

        jTable1.setModel(teamModel);
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.setRowHeight(new UserTeamPanel().getPreferredSize().height);
        jTable1.setTableHeader(null);
        TeamCellEditorRenderer teamCellEditorRenderer = new TeamCellEditorRenderer();
        jTable1.setDefaultRenderer(Object.class, teamCellEditorRenderer);
        jTable1.setDefaultEditor(Object.class, teamCellEditorRenderer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
